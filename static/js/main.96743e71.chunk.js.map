{"version":3,"sources":["App.js","Tab.js","Editor.js","index.js"],"names":["App","useState","output","setOutput","error","setError","showOutput","setShowOutput","showWebsiteOutput","setShowWebsiteOutput","help","setHelp","TabClass","code","fileHandler","fileName","fileExtension","fileType","language","this","tabs","setTabs","currentTab","setCurrentTab","html","find","tab","css","javascript","srcDoc","setSrcDoc","console","log","useEffect","timeout","setTimeout","undefined","clearTimeout","fileExtensions","name","extension","updateCode","value","arr","getFileExtension","string","split","createNewTab","handler","correctFileExtension","object","fileTypeName","fileLanguage","closeTab","index","splice","newFile","a","length","openFile","options","types","description","accept","window","showOpenFilePicker","files","getFile","file","text","saveFile","createWritable","writable","blob","Blob","write","close","showSaveFilePicker","runCode","eval","err","message","alert","toggleOutputBox","className","onClick","open","map","isCurrent","isLast","onChange","style","color","title","sandbox","frameBorder","width","height","Tab","background","Editor","onBeforeChange","editor","data","mode","theme","fontSize","lint","lineNumbers","lineWrapping","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.96743e71.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Tab from './Tab';\nimport Editor from './Editor';\n\nfunction App() {\n    const [output, setOutput] = useState(''); // The output of the users code\n    const [error, setError] = useState(false); // Whether or not the was an error in the user's code\n\n    const [showOutput, setShowOutput] = useState(true); // Whether or not the output box is shown\n    const [showWebsiteOutput, setShowWebsiteOutput] = useState(true); // Whether or not the iframe is shown\n\n    const [help, setHelp] = useState(false); // Whether or not the help modal is up or not\n\n    class TabClass {\n        constructor(code, fileHandler, fileName, fileExtension, fileType, language) {\n            this.code = code;\n            this.fileHandler = fileHandler;\n            this.fileName = fileName;\n            this.fileExtension = fileExtension;\n            this.fileType = fileType;\n            this.language = language;\n        }\n    }\n\n    const [tabs, setTabs] = useState([new TabClass('', null, 'untitled', '', '', 'text')]);\n    const [currentTab, setCurrentTab] = useState(0); // The index of the tab the user is currently on\n\n    const html = tabs.find(tab => tab.fileExtension === '.html')?.code;\n    const css = tabs.find(tab => tab.fileExtension === '.css')?.code;\n    const javascript = tabs.find(tab => tab.fileExtension === '.js')?.code;\n\n    const [srcDoc, setSrcDoc] = useState('');\n\n    console.log(html);\n    //console.log(srcDoc);\n\n    useEffect(() => {\n        const timeout = setTimeout(() => {\n            if (html !== undefined) {\n                setSrcDoc(`\n                    <html>\n                        <body>${html ? html : ''}</body>\n                        <style>${css ? css : ''}</style>\n                        <script>${javascript ? javascript : ''}</script>\n                    </html>\n                `);\n            }\n            else {\n                setSrcDoc(`\n                <html>\n                    <body><p>You have to have a HTML file open for this to work!</p></body>\n                    <style>\n                    html, body\n                    {\n                        height: 100%;\n                    }\n                    \n                    body\n                    {\n                        display: flex;\n                        justify-content: center;\n                        align-items: center;\n                    }\n                    \n                    p\n                    {\n                        font-size: 30px;\n                        font-family: sans-serif;\n                    }\n                    </style>\n                </html>\n            `);\n            }\n        }, 250)\n\n        return () => clearTimeout(timeout);\n    }, [html, css, javascript])\n\n    const fileExtensions = [\n        {\n            name: 'Text file',\n            extension: '.txt',\n            language: 'text'\n        },\n        {\n            name: 'HTML file',\n            extension: '.html',\n            language: 'xml'\n        },\n        {\n            name: 'CSS file',\n            extension: '.css',\n            language: 'css'\n        },\n        {\n            name: 'Javascript file',\n            extension: '.js',\n            language: 'javascript'\n        },\n    ];\n\n    const updateCode = (value) => {\n        const arr = tabs;\n\n        arr[currentTab].code = value;\n\n        setTabs([...arr]);\n    }\n\n    const getFileExtension = (string) => {\n        return string.split('.')[1];\n    }\n\n    // This is ran when we create a new file handler, like opening a file or clicking 'save as'\n    const createNewTab = (code, handler) => {\n        const extension = '.' + getFileExtension(handler.name);\n\n        const correctFileExtension = fileExtensions.find((object) => object.extension === extension);\n        const fileTypeName = correctFileExtension.name;\n        const fileLanguage = correctFileExtension.language;\n\n        return (new TabClass(code, handler, handler.name, extension, fileTypeName, fileLanguage));\n    }\n\n    const closeTab = (index) => {\n        const arr = tabs;\n\n        arr.splice(index, 1);\n\n        setCurrentTab(0);\n\n        setTabs([...arr]);\n    }\n\n    const newFile = async () => {\n        setTabs([...tabs, new TabClass('', null, 'untitled', '', '', 'text')]);\n\n        setCurrentTab(tabs.length);\n    }\n\n    const openFile = async () => {\n        const options = {\n            types: [ // https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types\n                {\n                    description: 'Text files',\n                    accept: {\n                        'text/plain': ['.txt'],\n                    },\n                },\n                {\n                    description: 'HTML files',\n                    accept: {\n                        'text/html': ['.js'],\n                    },\n                },\n                {\n                    description: 'CSS files',\n                    accept: {\n                        'text/css': ['.js'],\n                    },\n                },\n                {\n                    description: 'Javascript files',\n                    accept: {\n                        'text/javascript': ['.js'],\n                    },\n                },\n            ],\n        };\n\n        const files = await window.showOpenFilePicker(options);\n        const file = await files[0].getFile();\n        const text = await file.text();\n\n        setTabs([...tabs, createNewTab(text, files[0])]);\n\n        setCurrentTab(tabs.length);\n    }\n\n    const saveFile = async () => {\n        // If there is a file handler (i.e we have already saved a file) we just update that file,\n        // If not we make a new 'save as' prompt\n        if (tabs[currentTab].fileHandler) {\n            // Save\n            const writable = await tabs[currentTab].fileHandler.createWritable(); // Create a new writable stream\n\n            const blob = new Blob([tabs[currentTab].code]);\n\n            await writable.write(blob);\n\n            await writable.close();\n        }\n        else {\n            // Save as\n            const handler = await window.showSaveFilePicker();\n            const writable = await handler.createWritable();\n\n            await writable.write(tabs[currentTab].code);\n\n            await writable.close();\n\n            const arr = tabs;\n\n            arr[currentTab] = createNewTab(tabs[currentTab].code, handler);\n\n            setTabs([...arr]);\n        }\n    }\n\n    const runCode = () => {\n        if (tabs[currentTab].code === '') {\n            alert(\"Type something in the code editor before running your code!\");\n\n            return;\n        }\n        else if (tabs[currentTab].fileExtension !== '.js') {\n            alert(`Sorry, you can only run Javascript files! This is a ${tabs[currentTab].fileType}`);\n\n            return;\n        }\n\n        setShowOutput(true);\n\n        try {\n            setOutput(eval(tabs[currentTab].code));\n            setError(false);\n        }\n        catch (err) {\n            //console.log(err);\n\n            setOutput(`${err.name}: ${err.message}`);\n            setError(true);\n        }\n    }\n\n    const toggleOutputBox = () => {\n        setShowOutput(!showOutput);\n    }\n\n    return (\n        <div className=\"app\">\n            <header>\n                <button className=\"button header-button file-dropdown-button\">\n                    <p>File</p>\n                    <div className=\"file-dropdown\">\n                        <button className=\"button header-button file-dropdown-item\" onClick={newFile}>New File</button>\n                        <button className=\"button header-button file-dropdown-item\" onClick={openFile}>Open File</button>\n                        <button className=\"button header-button file-dropdown-item\" onClick={saveFile}>Save{!tabs[currentTab].fileHandler && ' As'} File</button>\n                    </div>\n                </button>\n\n                <button className=\"button header-button\" onClick={() => window.open('https://github.com/lordmaltazor/online-text-editor', '_blank')}>Github</button>\n                <button className=\"button header-button\" onClick={() => setHelp(true)}>Help</button>\n                <button className=\"button header-button\" onClick={runCode}>Run</button>\n                <div className=\"header-spacer\"></div>\n                <button className=\"button header-button\" onClick={toggleOutputBox}>{showOutput ? 'Hide' : 'Show'} output</button>\n            </header>\n\n            <div className=\"tabs\">\n                {tabs.map((tab, index) => <Tab key={index} name={tab.fileName} onClick={() => tabs[index] && setCurrentTab(index)} close={() => closeTab(index)} isCurrent={currentTab === index} isLast={tabs.length > 1} />)}\n            </div>\n\n            <section className=\"main-section\">\n                <div className=\"horizontal-main-section\">\n                    <Editor value={tabs[currentTab].code} onChange={(value) => updateCode(value)} language={tabs[currentTab].language} />\n\n                    {showOutput && <div className=\"output\" style={{ color: error ? \"red\" : 'white' }}>\n                        <p className=\"output-text\">Output:</p>\n                        {output}\n                    </div>}\n                </div>\n\n                {showWebsiteOutput && <div className=\"website-output\">\n                    <iframe\n                        title=\"output\"\n                        srcDoc={srcDoc}\n                        sandbox=\"allow-scripts\"\n                        frameBorder=\"0\"\n                        width=\"100%\"\n                        height=\"100%\"\n                    />\n                </div>}\n            </section>\n\n            <div className=\"status-bar\">\n                <p className=\"current-file\">{tabs[currentTab].fileName} {tabs[currentTab].fileName && tabs[currentTab].fileType && '|'} {tabs[currentTab].fileType}</p>\n                <div className=\"status-bar-spacer\"></div>\n                <button className=\"button toggle-iframe-button\" onClick={() => setShowWebsiteOutput(!showWebsiteOutput)}>{showWebsiteOutput ? 'Hide preview' : 'Show preview'}</button>\n            </div>\n\n            {help && <div className=\"help-modal-background\" onClick={() => setHelp(false)}>\n                <div className=\"help-modal\">\n                    <p className=\"help-modal-title\">Help</p>\n                    <button className=\"close-help-modal\" onClick={() => setHelp(false)}><i className=\"fas fa-times\"></i></button>\n                    <p className=\"help\">Just type your Javascript in the editor, and you will see the output in the panel to the right. When you're done with the code, you can choose a file name and download the script if you want to.</p>\n                </div>\n            </div>}\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react'\r\n\r\nexport default function Tab({ name, onClick, close, isCurrent, isLast }) {\r\n    return (\r\n        <button className=\"tab\" onClick={onClick} style={{ background: !isCurrent && 'transparent' }}>\r\n            <p className=\"tab-name\">{name}</p>\r\n            {isLast && <button className=\"close-tab-button\" onClick={close}><i className=\"fas fa-times\"></i></button>}\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport 'codemirror/lib/codemirror.css';\r\nimport 'codemirror/theme/material.css';\r\nimport 'codemirror/mode/xml/xml';\r\nimport 'codemirror/mode/css/css';\r\nimport 'codemirror/mode/javascript/javascript';\r\nimport { Controlled as ControlledEditor } from 'react-codemirror2';\r\n\r\nexport default function Editor({ value, onChange, language }) {\r\n    const handleChange = (editor, data, value) => {\r\n        onChange(value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"editor-container\">\r\n            <ControlledEditor\r\n                className=\"editor\"\r\n                value={value}\r\n                onBeforeChange={handleChange}\r\n                options={{\r\n                    mode: language === 'text' ? null : language,\r\n                    theme: 'material',\r\n                    fontSize: 20,\r\n                    lint: true,\r\n                    lineNumbers: language !== 'text',\r\n                    lineWrapping: true\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}