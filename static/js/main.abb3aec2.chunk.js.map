{"version":3,"sources":["Editor.js","index.js","App.js"],"names":["Editor","value","onChange","className","onBeforeChange","editor","data","options","mode","theme","fontSize","lint","lineNumbers","lineWrapping","ReactDOM","render","StrictMode","document","getElementById","App","filenameInput","useRef","useState","code","setCode","filename","setFilename","output","setOutput","error","setError","showOutput","setShowOutput","help","setHelp","openFile","a","types","description","accept","window","showOpenFilePicker","files","getFile","file","text","downloadFile","downloadAsFile","current","runCode","eval","err","name","message","alert","toggleOutputBox","onClick","type","e","target","ref","open","style","color"],"mappings":"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","file":"static/js/main.abb3aec2.chunk.js","sourcesContent":["import React from 'react';\r\nimport 'codemirror/lib/codemirror.css';\r\nimport 'codemirror/theme/material.css';\r\nimport 'codemirror/mode/javascript/javascript';\r\nimport { Controlled as ControlledEditor } from 'react-codemirror2';\r\n\r\nexport default function Editor({ value, onChange }) {\r\n    const handleChange = (editor, data, value) => {\r\n        onChange(value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"editor-container\">\r\n            <ControlledEditor\r\n                className=\"editor\"\r\n                value={value}\r\n                onBeforeChange={handleChange}\r\n                options={{\r\n                    mode: 'javascript',\r\n                    theme: 'material',\r\n                    fontSize: 20,\r\n                    lint: true,\r\n                    lineNumbers: true,\r\n                    lineWrapping: true\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","import React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport downloadAsFile from 'download-as-file';\nimport Editor from './Editor';\n\nfunction App() {\n    const filenameInput = useRef(null);\n\n    const [code, setCode] = useState('');\n    const [filename, setFilename] = useState('');\n\n    const [output, setOutput] = useState(''); // The output of the users code\n    const [error, setError] = useState(false); // Whether or not the was an error in the user's code\n\n    const [showOutput, setShowOutput] = useState(true); // Whether or not the output box is shown\n\n    const [help, setHelp] = useState(false); // Whether or not the help modal is up or not\n\n    const openFile = async () => {\n        const options = {\n            types: [\n                {\n                    description: 'Javascript Files',\n                    accept: {\n                        'text/javascript': ['.js'],\n                    },\n                },\n            ],\n        };\n\n        const files = await window.showOpenFilePicker(options);\n        const file = await files[0].getFile();\n        const text = await file.text();\n\n        setCode(text);\n    }\n\n    const downloadFile = () => {\n        downloadAsFile({\n            data: code,\n            filename: `${filename}.js`\n        })\n\n        filenameInput.current.value = '';\n    }\n\n    const runCode = () => {\n        if (code === '') {\n            alert(\"Type something in the code editor before running your code!\");\n\n            return;\n        }\n\n        setShowOutput(true);\n\n        try {\n            setOutput(eval(code));\n            setError(false);\n        }\n        catch (err) {\n            //console.log(err);\n\n            setOutput(`${err.name}: ${err.message}`);\n            setError(true);\n        }\n    }\n\n    const toggleOutputBox = () => {\n        setShowOutput(!showOutput);\n    }\n\n    return (\n        <div className=\"app\">\n            <header>\n                <button className=\"header-button\" onClick={openFile}>Open File</button>\n\n                <button className=\"header-button download-file-button\">\n                    <p>Download File</p>\n                    <div className=\"enter-filename\">\n                        <p className=\"filename\">Filename: </p>\n                        <input type=\"text\" onChange={(e) => setFilename(e.target.value)} ref={filenameInput} />\n                        <button className=\"header-button enter-filename-button\" onClick={downloadFile}>Enter</button>\n                    </div>\n                </button>\n\n                <button className=\"header-button\" onClick={() => window.open('https://github.com/lordmaltazor/online-text-editor', '_blank')}>Github</button>\n                <button className=\"header-button\" onClick={() => setHelp(true)}>Help</button>\n                <button className=\"header-button\" onClick={runCode}>Run</button>\n                <div className=\"header-spacer\"></div>\n                <button className=\"header-button\" onClick={toggleOutputBox}>{showOutput ? 'Hide' : 'Show'}</button>\n            </header>\n\n            <section className=\"main-section\">\n                <Editor value={code} onChange={setCode} />\n\n                {showOutput && <div className=\"output\" style={{ color: error ? \"red\" : 'white' }}>\n                    <p className=\"output-text\">Output:</p>\n                    {output}\n                </div>}\n            </section>\n\n            {help && <div className=\"help-modal-background\" onClick={() => setHelp(false)}>\n                <div className=\"help-modal\">\n                    <p className=\"help-modal-title\">Help</p>\n                    <button className=\"close-help-modal\" onClick={() => setHelp(false)}><i className=\"fas fa-times\"></i></button>\n                    <p className=\"help\">Just type your Javascript in the editor, and you will see the output in the panel to the right. When you're done with the code, you can choose a file name and download the script if you want to.</p>\n                </div>\n            </div>}\n        </div>\n    );\n}\n\nexport default App;\n"],"sourceRoot":""}